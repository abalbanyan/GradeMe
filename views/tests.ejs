<%- include partials/header.ejs %>

<style>
  .ace_editor, .ace_editor * {
    font-family:  'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', 'source-code-pro', monospace;
    font-size:13px;
    /*color:inherit;*/
  }
</style>

<div class="container">
  <h3>Tests</h4>
  <br>
  <div class="row">
    <div class="col-3">
      <div class="list-group" id="testcases-tab" role="tablist">
        <%# populate testcase tab list %>
        <% tests.forEach((test, i) => { %>
          <a class="list-group-item list-group-item-action <%= i==0 ? 'active' : '' %>" data-toggle="list" href="#<%= test.id %>" role="tab">
            <%= test.name %>
          </a>
        <% }); %>
          <a class="list-group-item list-group-item-action <%= tests.length==0 ? 'active' : '' %>" id="createTab" data-toggle="list" href="#new-testcase" role="tab">+</a>
      </div>
    </div>

    <div class="col">
      <div class="tab-content" id="testcases-tabContent">
      <%# populate testcase tab pages %>
      <% tests.forEach((test, i) => { %>
        <div class="tab-pane fade mb-2 <%= i==0 ? 'show active' : '' %>" id="<%= test.id %>" role="tabpanel">
          <form class="mb-2">
            <div class="form-group">
              <label for="name">Testcase Name</label>
              <input type="text" class="form-control" id="name" name="name" value="<%= test.name %>">
            </div>
            <div class="form-group">
              <label for="stdin">STDIN</label>
              <textarea class="form-control" id="stdin" name="stdin" rows="5" cols="80"><%= test.stdin %></textarea>
            </div>
            <div class="form-group">
              <label for="stdin">STDOUT</label>
              <textarea class="form-control" id="stdout" name="stdout" rows="5" cols="80"><%= test.stdout %></textarea>
            </div>
            <button type="button" class="btn btn-primary" onclick="update()">Update</button>
            <button type="button" class="btn btn-secondary" onclick="remove()">Delete</button>
          </form>
        </div>
      <% }); %>

      <%# Submit a new testcase %>
        <div class="tab-pane fade <%= tests.length==0 ? 'show active' : '' %>" id="new-testcase" role="tabpanel">
          <form class="mb-2" id="createForm">
            <div class="form-group">
              <label for="name">Testcase Name</label>
              <input class="form-control" id="name" name="name" type="text">
            </div>
            <div class="form-group">
              <label for="stdin">STDIN</label>
              <textarea class="form-control" id="stdin" name="stdin" rows="5" cols="80"></textarea>
            </div>
            <div class="form-group">
              <label for="stdout">STDOUT</label>
              <textarea class="form-control" id="stdout" name="stdout" rows="5" cols="80"></textarea>
            </div>
            <button type="button" class="btn btn-primary" onclick="create()">Create</button>
          </form>
        </div><!-- end submit new testcase -->
      </div><!-- end tabContent -->

    </div><!-- end column -->
  </div><!-- end row -->
  <hr>

  <%# makefile editor %>
  <div class="container">
    <div id="updateMetadataAlert" class="alert alert-success collapse" role="alert">
      Sucessfully saved test metadata.
    </div>
    <form class="mb-2" id="makefileForm">
      <div class="form-group">
        <label for="buildCmd">Executable name</label>
        <input class="form-control" id="execName" name="execName" type="text" value="<%= testcases_meta.execName %>">
      </div>
      <div class="form-group">
        <h6>Makefile</h6>
        <div style="height: 30em" id="makefileEditor"><%= testcases_meta.makefile %></div>
      </div>
      <button type="button" class="btn btn-primary" onclick="submitMetadata()">Update</button>
    </form>
  </div>

</div><!-- end container -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.3.3/ace.js" type="text/javascript"></script>
<script>
  var testContent = document.getElementById('testcases-tabContent');
  var testTabs = document.getElementById('testcases-tabContent');
  var createForm = document.getElementById('createForm');
  var updateMetadataAlert = document.getElementById('updateMetadataAlert');
  var makefileEditor = ace.edit('makefileEditor');
  makefileEditor.setTheme("ace/theme/monokai");
  makefileEditor.session.setMode("ace/mode/makefile");
  var execName = document.getElementById('execName');

  function formToJSON(formElem) {
    const formdata = new FormData(formElem);
    let ret = {};
    formdata.forEach((value, key) => {
      ret[key] = value;
    });
    return ret;
  }

/*
  function insertTestcase(testcase) {
    // replace create tab with the new testcase's name
    let createTab = document.getElementById('createTab');
    let newCreateTab = createTab.cloneNode();
    createTab.id = '';
    createTab.href = '#' + testcase.id;
    createTab.textContent = testcase.name;

    let testCaseContent = document.createElement("div");
    newTestCase.classList.add();
  }

  function removeTestcase(testcase) {
    return location.reload();
  }
*/

  async function create() {
    let res = await fetch(window.location.href, {
      method: "POST",
      headers: {
        'content-type': 'application/json'
      },
      body: JSON.stringify(formToJSON(createForm)),
      credentials: "same-origin"
    });
    return location.reload();
  }

  async function remove() {
    let testid = testContent.querySelector('.active').id
    let res = await fetch(window.location.href, {
      method: "DELETE",
      headers: {
        'content-type': 'application/json'
      },
      body: JSON.stringify({
        testid: testid
      }),
      credentials: "same-origin"
    });

    return location.reload();
  }

  async function update() {
    let curTestContent = testContent.querySelector('.active')
    let formdata = formToJSON(curTestContent.querySelector('form'));
    formdata.testid = curTestContent.id;

    let res = await fetch(window.location.href, {
      method: "PUT",
      headers: {
        'content-type': 'application/json'
      },
      body: JSON.stringify(formdata),
      credentials: "same-origin"
    });

    return location.reload();
  }

  async function submitMetadata() {
    let res = await fetch('/assignment/upload/testcase_meta' + window.location.search, {
      method: "PUT",
      headers: {
        'content-type': 'application/json'
      },
      body: JSON.stringify({
        execName: execName.value,
        makefile: makefileEditor.getSession().getValue()
      }),
      credentials: "same-origin"
    });

    updateMetadataAlert.classList.remove('collapse');
    setTimeout(() => updateMetadataAlert.classList.add('collapse'), 5000);
  }

</script>

<%- include partials/footer.ejs %>